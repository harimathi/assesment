{"version":3,"sources":["components/MatrixFill.js","components/Nav.js","components/ListCard.js","components/Post.js","store/action/actionTypes.js","components/Feeding.js","store/action/action.js","components/Screen.js","App.js","reportWebVitals.js","store/reducer/reducer.js","index.js"],"names":["Comments","state","inputArr","onClickHandler","event","finalArray","target","previousElementSibling","value","split","filter","val","setState","originalArr","this","arrCopy","elCount","Math","round","length","flexEl","sort","a","b","map","i","id","el","style","flex","background","random","toString","substr","textAlign","upperRowEl","lowerRowEl","push","colorGrid","className","placeholder","onClick","Component","Nav","to","exact","activeClassName","ListCard","props","list","Post","post","liKey","title","body","comment","postId","email","name","ADD_POST","ADD_COMMENTS","SET_POST","SET_COMMENTS","SHOW_ERROR","SHOW_SEARCH","Feeding","postAreahandler","textVal","data","posts","onAddPost","commentAreahandler","comments","onAddcomment","serachAreaHandler","searchText","onSearch","autoFocus","onChange","connect","error","search","dispatch","text","type","actionTypes","action","Start","postReq","axios","get","commentsReq","all","then","response","onSetPosts","slice","onSetComments","catch","onShowError","searchPost","searchComments","App","path","component","MatrixFill","Screen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","updatedPost","updatedComment","includes","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c507bcc.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\n\r\nclass Comments extends Component {\r\n  state = {\r\n    inputArr: [8, 17, 35, 13, 25],\r\n  };\r\n\r\n  onClickHandler = (event) => {\r\n    let inputString = event.target.previousElementSibling.value;\r\n    let arrayVal = inputString.split(\",\");\r\n    let finalArray = arrayVal.filter((val) => val && val > -1);\r\n    this.setState({ inputArr: finalArray });\r\n  };\r\n  render() {\r\n    let originalArr = this.state.inputArr;\r\n    let arrCopy = [...originalArr];\r\n    let elCount = Math.round(arrCopy.length / 2);\r\n    let sortedArr = arrCopy.sort((a, b) => a - b);\r\n    let flexEl = sortedArr.map((val, i) => {\r\n      return {\r\n        id: val,\r\n        el: (\r\n          <div\r\n            style={{\r\n              flex: i + 1,\r\n              background: `#${Math.random().toString(16).substr(2, 6)}`,\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {val}\r\n          </div>\r\n        ),\r\n      };\r\n    });\r\n    let upperRowEl = [];\r\n    let lowerRowEl = [];\r\n    originalArr.map((val, i) => {\r\n      if (i < elCount) {\r\n        flexEl.filter((value) => {\r\n          if (val == value.id) {\r\n            upperRowEl.push(value.el);\r\n          }\r\n        });\r\n      } else {\r\n        flexEl.filter((value) => {\r\n          if (val == value.id) {\r\n            lowerRowEl.push(value.el);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    let colorGrid = this.state.inputArr.length ? (\r\n      <div className=\"gridContainer\">\r\n        <div className=\"row\">{upperRowEl}</div>\r\n        <div className=\"row\">{lowerRowEl}</div>\r\n      </div>\r\n    ) : (\r\n      <h2>Please give Array values</h2>\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        {colorGrid}\r\n        <div className=\"numberField\">\r\n          <input placeholder=\"use , to separate value\"></input>\r\n          <button onClick={this.onClickHandler}>change</button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\" exact activeClassName=\"navLinkActive\">\r\n              Post/Comments Task\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/task2\" activeClassName=\"navLinkActive\">\r\n              Matrix Fill Chart\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nclass ListCard extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"ListCard\">\r\n          <ul>{this.props.list}</ul>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nclass Post extends Component {\r\n  render() {\r\n    let post;\r\n    if (this.props) {\r\n      this.liKey++;\r\n      post = this.props.post.length\r\n        ? this.props.post.map((post) => {\r\n            return (\r\n              <li>\r\n                <div className=\"Post\">\r\n                  <div className=\"Card\">\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.body}</p>\r\n                  </div>\r\n                </div>\r\n                {this.props.comment.length\r\n                  ? this.props.comment.map((comment) => {\r\n                      if (comment.postId === post.id) {\r\n                        return (\r\n                          <div className=\"Comment\">\r\n                            <div className=\"Card\">\r\n                              <div>\r\n                                <p>{comment.email}</p>\r\n                                <h3>{comment.name}</h3>\r\n                              </div>\r\n                              <p>{comment.body}</p>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })\r\n                  : null}\r\n              </li>\r\n            );\r\n          })\r\n        : this.props.comment.length\r\n        ? this.props.comment.map((comment) => {\r\n            // if (comment.postId == post.id) {\r\n            return (\r\n              <div className=\"Comment\">\r\n                <div className=\"Card\">\r\n                  <div>\r\n                    <p>{comment.email}</p>\r\n                    <h3>{comment.name}</h3>\r\n                  </div>\r\n                  <p>{comment.body}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n            // }\r\n          })\r\n        : null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"ListContainer\">\r\n          <ListCard list={post} />\r\n          {/* {post} */}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","export const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const SET_POST = \"SET_POST\";\r\nexport const SET_COMMENTS = \"SET_COMMENTS\";\r\nexport const SHOW_ERROR = \"SHOW_ERROR\";\r\nexport const SHOW_SEARCH = \"SHOW_SEARCH\";\r\n","import React, { Component } from \"react\";\r\nimport * as action from \"../store/action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Feeding extends Component {\r\n  postAreahandler = (event) => {\r\n    const textVal = event.target.previousElementSibling.value;\r\n\r\n    if (!textVal) {\r\n      return;\r\n    }\r\n    const data = {\r\n      id: this.props.posts.length + 1,\r\n      title: textVal,\r\n      body: textVal,\r\n    };\r\n    this.props.onAddPost(data);\r\n  };\r\n\r\n  commentAreahandler = (event) => {\r\n    const textVal = event.target.previousElementSibling.value;\r\n\r\n    if (!textVal) {\r\n      return;\r\n    }\r\n    const data = {\r\n      postId: this.props.comments.length + 1,\r\n      name: textVal,\r\n      email: textVal,\r\n      body: textVal,\r\n    };\r\n    this.props.onAddcomment(data);\r\n  };\r\n\r\n  serachAreaHandler = (event) => {\r\n    let searchText = event.target.value;\r\n    this.props.onSearch(searchText);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Input\">\r\n        <div className=\"Field\">\r\n          <textarea\r\n            autoFocus\r\n            id=\"searchArea\"\r\n            placeholder=\" type to search...\"\r\n            onChange={this.serachAreaHandler}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"Field\">\r\n          <textarea id=\"postArea\"></textarea>\r\n          <button onClick={this.postAreahandler}>Post...</button>\r\n        </div>\r\n        <div className=\"Field\">\r\n          <textarea id=\"commentArea\"></textarea>\r\n          <button onClick={this.commentAreahandler}>Comment</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments,\r\n    error: state.error,\r\n    search: state.search,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddPost: (text) => dispatch(action.addPost(text)),\r\n    onAddcomment: (text) => dispatch(action.addComment(text)),\r\n    onSearch: (text) => dispatch(action.showSearch(text)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feeding);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setPosts = (postData) => {\r\n  return {\r\n    type: actionTypes.SET_POST,\r\n    data: postData,\r\n  };\r\n};\r\n\r\nexport const setComments = (commentData) => {\r\n  return {\r\n    type: actionTypes.SET_COMMENTS,\r\n    data: commentData,\r\n  };\r\n};\r\nexport const addPost = (text) => {\r\n  return {\r\n    type: actionTypes.ADD_POST,\r\n    data: text,\r\n  };\r\n};\r\n\r\nexport const addComment = (text) => {\r\n  return {\r\n    type: actionTypes.ADD_COMMENTS,\r\n    data: text,\r\n  };\r\n};\r\n\r\nexport const showError = (error) => {\r\n  return {\r\n    type: actionTypes.SHOW_ERROR,\r\n    data: error,\r\n  };\r\n};\r\nexport const showSearch = (text) => {\r\n  return {\r\n    type: actionTypes.SHOW_SEARCH,\r\n    data: text,\r\n  };\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Post from \"./Post\";\r\nimport axios from \"axios\";\r\nimport * as action from \"../store/action\";\r\nimport { connect } from \"react-redux\";\r\nimport Feeding from \"./Feeding\";\r\n\r\nconst postURL = \"https://jsonplaceholder.typicode.com/posts\";\r\nconst commentsURL = \"https://jsonplaceholder.typicode.com/comments\";\r\n\r\nclass Start extends Component {\r\n  componentDidMount() {\r\n    const postReq = axios.get(postURL);\r\n    const commentsReq = axios.get(commentsURL);\r\n    axios\r\n      .all([postReq, commentsReq])\r\n      .then((response) => {\r\n        this.props.onSetPosts(response[0].data.slice(0, 100));\r\n        this.props.onSetComments(response[1].data.slice(0, 100));\r\n        // this.setState({ posts: response[0].data.slice(0, 4) });\r\n        // this.setState({ comments: response[1].data.slice(0, 4) });\r\n      })\r\n      .catch((error) => {\r\n        this.props.onShowError();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let post =\r\n      this.props.searchPost.length || this.props.searchComments.length ? (\r\n        <Post\r\n          post={this.props.searchPost}\r\n          comment={this.props.searchComments}\r\n        />\r\n      ) : (\r\n        <Post post={this.props.posts} comment={this.props.comments} />\r\n      );\r\n\r\n    if (this.props.error) {\r\n      post = (\r\n        <p style={{ textAlign: \"center\" }}>Somthing Went Wrong on URL/SERVER</p>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"blogContainer\">\r\n          {post}\r\n          <Feeding />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments,\r\n    error: state.error,\r\n    searchPost: state.searchPost,\r\n    searchComments: state.searchComments,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetPosts: (data) => dispatch(action.setPosts(data)),\r\n    onSetComments: (data) => dispatch(action.setComments(data)),\r\n    onShowError: () => dispatch(action.showError()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MatrixFill from \"./components/MatrixFill\";\nimport Nav from \"./components/Nav\";\nimport Screen from \"./components/Screen\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/task2\" component={MatrixFill} />\n          <Route path=\"/\" component={Screen} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../action/actionTypes\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  comments: [],\r\n  searchPost: [],\r\n  searchComments: [],\r\n  error: false,\r\n  search: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_POST:\r\n      return {\r\n        ...state,\r\n        posts: action.data,\r\n      };\r\n    case actionTypes.SET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.data,\r\n      };\r\n    case actionTypes.ADD_POST:\r\n      const updatedPost = [action.data, ...state.posts];\r\n      return {\r\n        ...state,\r\n        posts: updatedPost,\r\n      };\r\n    case actionTypes.ADD_COMMENTS:\r\n      const updatedComment = [action.data, ...state.comments];\r\n      return {\r\n        ...state,\r\n        comments: updatedComment,\r\n      };\r\n    case actionTypes.SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case actionTypes.SHOW_SEARCH:\r\n      let comments;\r\n      let post;\r\n      if (action.data) {\r\n        state.search = true;\r\n        post = state.posts.filter(\r\n          (val) =>\r\n            val[\"title\"].includes(action.data) ||\r\n            val[\"body\"].includes(action.data)\r\n        );\r\n        comments = state.comments.filter(\r\n          (val) =>\r\n            val[\"email\"].includes(action.data) ||\r\n            val[\"body\"].includes(action.data) ||\r\n            val[\"name\"].includes(action.data)\r\n        );\r\n      } else {\r\n        state.search = false;\r\n        post = [];\r\n        comments = [];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        searchPost: post,\r\n        searchComments: comments,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer from \"./store/reducer/reducer\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}